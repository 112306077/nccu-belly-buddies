import dotenv from 'dotenv'
dotenv.config()
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

function isEmailValid(email) {
    return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)
}

async function checkAndCreateAdmin() {
    try {
        // Check if admin exists
        const admin = await prisma.user.findFirst({
            where: { role: 'ADMIN' },
        })

        if (!admin) {
            console.log('Check Admin: Admin user does not exist. Creating...')

            // Check if email exists
            const email = process.env.SUPER_EMAIL
            if (!email) {
                console.error('Check Admin: Fail to create first admin user.')
                console.warn(
                    'You should provide your email via "--".\nRun: "npm run dev --email=your@ema.il" instead.'
                )
                return process.exit(1)
            }

            // Check if email is valid
            if (!isEmailValid(email)) {
                console.error('Check Admin: Invalid email format.')
                return process.exit(1)
            }

            // Create admin user and papa SEO
            const newAdmin = await prisma.$transaction(async tx => {
                await tx.seo.create({
                    data: {
                        route: '/',
                        title: 'Papa',
                        description:
                            'Papa - A simple and thorough platform for modern web app.',
                        autoGenerated: true,
                    },
                })
                return await tx.user.create({
                    data: {
                        email,
                        role: 'ADMIN',
                        status: 'ACTIVE',
                    },
                })
            })

            console.log('\nCheckAdmin: Admin user created:', newAdmin)
            console.warn(
                `\n* * * \nAdmin user created! Sign in with ${newAdmin.email}.\n* * *\n`
            )
        } else {
            console.log('Check Admin: Admin user already exists.\n')
        }
    } catch (error) {
        console.error('Check Admin: Error checking/creating admin user:', error)
    } finally {
        await prisma.$disconnect()
    }
}

checkAndCreateAdmin()
