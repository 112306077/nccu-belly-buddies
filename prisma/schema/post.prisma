model Post {
    id            String   @id @default(auto()) @map("_id") @db.ObjectId
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    slug          String   @unique
    title         String
    content       String
    excerpt       String
    featuredImage String?
    status        String
    author        User     @relation(fields: [authorId], references: [id])
    authorId      String   @db.ObjectId
    seo           Seo      @relation(fields: [seoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    seoId         String   @unique @db.ObjectId

    tags           Tag[]         @relation(fields: [tagIDs], references: [id])
    tagIDs         String[]      @db.ObjectId
    categories     Category[]    @relation(fields: [categoryIDs], references: [id])
    categoryIDs    String[]      @db.ObjectId
    subCategories  SubCategory[] @relation(fields: [subCategoryIDs], references: [id])
    subCategoryIDs String[]      @db.ObjectId
}

model Category {
    id            String        @id @default(auto()) @map("_id") @db.ObjectId
    name          String
    posts         Post[]        @relation(fields: [postIDs], references: [id])
    postIDs       String[]      @db.ObjectId
    subCategories SubCategory[]
}

model SubCategory {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    categoryId String   @db.ObjectId
    posts      Post[]   @relation(fields: [postIDs], references: [id])
    postIDs    String[] @db.ObjectId
}

model Tag {
    id      String   @id @default(auto()) @map("_id") @db.ObjectId
    name    String
    postIDs String[] @db.ObjectId
    posts   Post[]   @relation(fields: [postIDs], references: [id])
}
